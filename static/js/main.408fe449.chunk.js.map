{"version":3,"sources":["Constants/Pokemon.js","Components/Card/Group/Item/Item.jsx","Components/Card/Group/Group.jsx","Components/Card/Information/Information.jsx","Components/Card/Card.jsx","Components/Pokedex/Pokedex.jsx","Assets/Img/pokemon.png","Components/Party/PartyPokemon/PartyPokemon.jsx","Components/Party/Party.jsx","Components/Search/Search.jsx","Components/Pagination/Button/Button.jsx","Components/Pagination/NextButton/NextButton.jsx","Components/Pagination/PreviusButton/PreviusButton.jsx","Components/Pagination/Pagination.jsx","Services/Pokemon.services.js","App.js","reportWebVitals.js","index.js"],"names":["typeColors","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","Item","name","color","className","style","backgroundColor","Group","title","items","map","item","Information","id","Card","types","abilities","thumbnail","onAdd","onClick","src","alt","Pokedex","pokemons","onAddToParty","length","pokemon","PartyPokemon","onDelete","pokebola","Party","party","onDeleteInParty","partyToRender","Array","fill","forEach","poke","i","partyId","Search","onSearch","useState","setName","onSubmit","e","preventDefault","type","value","placeholder","onChange","target","Button","action","onPagination","actionText","toUpperCase","NextButton","PreviusButton","Pagination","BASE_URL","fetchUrlPokemons","a","limit","offset","fetch","pokemonsFetch","json","pokemonsUrl","results","result","url","fetchPokemons","urlPokemons","urlPromises","Promise","all","resultsJSON","response","mapRawPokemon","pokemonRaw","ability","sprites","front_default","pokemonServices","getAllPokemon","fetchedUrls","mappedPokemons","console","error","getPokemon","undefined","ok","App","setPokemons","setParty","searchedPokemon","setSearchedPokemon","setOffset","useEffect","onAddToPartyHandler","find","newParty","Date","getTime","onSearchHandler","onPaginationHandler","newOffset","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.408fe449.chunk.js","sourcesContent":["export const typeColors = {\r\n\tnormal: '#A8A77A',\r\n\tfire: '#EE8130',\r\n\twater: '#6390F0',\r\n\telectric: '#F7D02C',\r\n\tgrass: '#7AC74C',\r\n\tice: '#96D9D6',\r\n\tfighting: '#C22E28',\r\n\tpoison: '#A33EA1',\r\n\tground: '#E2BF65',\r\n\tflying: '#A98FF3',\r\n\tpsychic: '#F95587',\r\n\tbug: '#A6B91A',\r\n\trock: '#B6A136',\r\n\tghost: '#735797',\r\n\tdragon: '#6F35FC',\r\n\tdark: '#705746',\r\n\tsteel: '#B7B7CE',\r\n\tfairy: '#D685AD',\r\n};\r\n","export default function Item({name, color}) {\r\n    return <div className=\"text-white p-1\" style={{backgroundColor: color}}>{name}</div>\r\n}","import { typeColors } from \"../../../Constants/Pokemon\"\r\nimport Item from \"./Item/Item\"\r\n\r\nexport default function Group({ title = '', items = []}){\r\n    return <div className=\"flex flex-col mt-2\">\r\n        <h3 className=\"capitalize text-base\">{ title} </h3>\r\n\r\n        <div className=\"flex gap-3\">\r\n            {items.map(item => {\r\n                const color = typeColors[item] ?? \"rgb(191, 191, 191)\"\r\n                return <Item key={item} name={item} color={color} />\r\n            })}\r\n        </div>\r\n    </div>\r\n}","export default function Information({ name, id}){\r\n    return <div className=\"flex justify-between\">\r\n        <h2 className=\"font-roboto text-lg capitalize\">{name}</h2>\r\n        <p className=\"font-roboto text-xl\">N {id}</p>\r\n    </div>\r\n\r\n}","import Group from './Group/Group'\r\nimport Information from './Information/Information'\r\nimport { IoAdd } from 'react-icons/all'\r\n\r\nexport default function Card({ name, id, types, abilities, thumbnail, onAdd = () => {}}){\r\n\r\n    return <div className=\"w-72 h-96 bg-white rounded shadow-lg relative p-1\">\r\n        <div onClick={ ()=> { onAdd(); } }\r\n            className=\"absolute top-1 right-1 p-1 text-white bg-indigo-600 rounded cursor-pointer\">\r\n            <IoAdd />\r\n        </div>\r\n\r\n        <div className='w-72 h-40 rounded flex justify-center items-center'>\r\n            <img className=\"w-32 h-32 object-contain\" src={thumbnail} alt={name} />\r\n        </div>\r\n\r\n        <Information name={name} id={id} />\r\n        <Group title=\"types\" items={types} />\r\n        <Group title=\"abilities\" items={abilities} />\r\n    </div>\r\n}","import Card from \"../Card/Card\"\r\n\r\nexport default function Pokedex({ pokemons = [], onAddToParty = () => {} }){\r\n   if(pokemons.length === 0) return <div className=\"bg-red-400\">Loading...</div>\r\n\r\n   return <div className=\"flex gap-2 justify-center mt-3 flex-wrap\">\r\n      { pokemons.map(pokemon => {\r\n         return <Card\r\n                     key={pokemon.id}\r\n                     onAdd={ () => { onAddToParty(pokemon.id) } }\r\n                     name={pokemon.name}\r\n                     id={pokemon.id}\r\n                     types={pokemon.types} \r\n                     abilities={pokemon.abilities}\r\n                     thumbnail={pokemon.thumbnail}/>\r\n      })}\r\n   </div>\r\n}","export default __webpack_public_path__ + \"static/media/pokemon.1faeca5f.png\";","import { AiFillDelete as TrashIcon } from 'react-icons/all';\r\n\r\nimport pokebola from '../../../Assets/Img/pokemon.png';\r\n\r\nconst PartyPokemon = ({ pokemon = {}, onDelete = () => {} }) => {\r\n  return (\r\n    <div className=\"relative\" onClick={()=> { onDelete(); }}>\r\n      { pokemon.id && <div className=\"absolute top-0 right-0 cursor-pointer\"> \r\n        <TrashIcon className=\"text-red-700 w-6 h-6\"/>\r\n      </div> }\r\n\r\n      <div className=\"w-24 h-24 p-1 rounded-full bg-gray-300 select-none\">\r\n        <img className=\"w-full h-full object-cover\" src={pokemon.thumbnail ?? pokebola} alt={pokemon.name ?? \"Empty Space\"}/>\r\n      </div>\r\n      <p className=\"text-center mt-2 font-roboto capitalize\">{ pokemon.name ?? \"Empty\" }</p>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default PartyPokemon;","import PartyPokemon from \"./PartyPokemon/PartyPokemon\";\r\n\r\nconst Party = ({ party=[], onDeleteInParty = ()=> {} }) => {\r\n  const partyToRender = Array(6).fill({});\r\n  party.forEach((poke, i) => { partyToRender[i] = { ...poke } });\r\n\r\n  return (\r\n    <div className=\"w-full flex flex-wrap gap-8 justify-center items-center\">\r\n      {\r\n        partyToRender.map((poke, i) => {\r\n          return (\r\n              <PartyPokemon\r\n                onDelete={ () => { poke.partyId && onDeleteInParty(poke.partyId) }}\r\n                key={ poke.partyId ?? `Empty_${i}` } \r\n                pokemon={poke} />\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Party;","import { useState } from \"react\";\r\n\r\nconst Search = ({ onSearch = () => {} }) => {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    onSearch(name);\r\n  }\r\n  \r\n  return (\r\n    <form onSubmit={onSubmitHandler}>\r\n      <input className=\"border-2 border-gray-300 px-3 py-1 rounded-l-lg text-lg\" type=\"text\" value={name} placeholder=\"Search for a pokemon\" onChange={(e) => { setName(e.target.value) }} />\r\n      <button className=\"border-gray-400 border-2 bg-indigo-500 hover:bg-indigo-700 text-white px-3 py-1 rounded-r-lg text-lg\" type=\"submit\">Search</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nconst Button = ( { action, onPagination = () => {} } ) => {\r\n    let actionText = action.toUpperCase();\r\n    return <button \r\n                onClick={ () => { onPagination( action ); }}\r\n                className=\"bg-red-500 hover:bg-red-700 text-white mx-2 px-4 py-1 rounded text-xl\">{ actionText }\r\n            </button>;\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from '../Button/Button';\r\n\r\nconst NextButton = ( { onPagination = () => {} } ) => {\r\n    return <Button action='next' onPagination={ onPagination } />;\r\n}\r\n\r\nexport default NextButton;","import React from 'react';\r\nimport Button from '../Button/Button';\r\n\r\nconst PreviusButton = ( { onPagination = () => {} } ) => {\r\n    return <Button action='previus' onPagination={ onPagination } />;\r\n}\r\n\r\nexport default PreviusButton;","import React from 'react';\r\nimport NextButton from './NextButton/NextButton';\r\nimport PreviusButton from './PreviusButton/PreviusButton';\r\n\r\nconst Pagination = ( { onPagination = () => {} } ) => {\r\n    return (\r\n        <div>\r\n            <PreviusButton onPagination={ onPagination } />\r\n            <NextButton onPagination={ onPagination } />\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default Pagination;","const BASE_URL = \"https://pokeapi.co/api/v2/\";\r\n\r\nconst fetchUrlPokemons = async ({ limit=10, offset=0 }) => {\r\n  const pokemonsFetch = await fetch(`${BASE_URL}pokemon?limit=${limit}&offset=${offset}`);\r\n  const pokemons = await pokemonsFetch.json();\r\n  const pokemonsUrl = pokemons.results.map((result) => result.url);\r\n\r\n  return pokemonsUrl;\r\n};\r\n\r\nconst fetchPokemons = async (urlPokemons) => {\r\n  const urlPromises = urlPokemons.map((url) => fetch(url));\r\n\r\n  const results = await Promise.all(urlPromises); // dame un array de PROMESAS -> hace await a cada una de ellas\r\n  const resultsJSON = results.map((response) => response.json());\r\n\r\n  const pokemons = await Promise.all(resultsJSON);\r\n  return pokemons;\r\n};\r\n\r\nconst mapRawPokemon = (pokemonRaw) => {\r\n  const abilities = pokemonRaw.abilities.map((ability) => {\r\n    return ability.ability.name;\r\n  });\r\n\r\n  const types = pokemonRaw.types.map((type) => {\r\n    return type.type.name;\r\n  });\r\n\r\n  const pokemon = {\r\n    name: pokemonRaw.name,\r\n    id: pokemonRaw.id,\r\n    abilities: abilities,\r\n    types: types,\r\n    thumbnail: pokemonRaw.sprites.front_default,\r\n  };\r\n\r\n  return pokemon;\r\n}\r\n\r\nexport const pokemonServices = {\r\n  getAllPokemon: async ( offset = 0 ) => {\r\n    try {\r\n      const urlPokemons = await fetchUrlPokemons({ limit: 10, offset: offset });\r\n\r\n      const fetchedUrls = await fetchPokemons(urlPokemons);\r\n\r\n      const mappedPokemons = fetchedUrls.map((pokemonRaw) => {\r\n        return mapRawPokemon(pokemonRaw)\r\n      });\r\n\r\n      return mappedPokemons;\r\n    } catch (error) {\r\n      console.error(error);\r\n      return [];\r\n    }\r\n  },\r\n  getPokemon: async (name=\"\") => {\r\n    let pokemon = undefined;\r\n\r\n    try {\r\n      const response = await fetch(`${BASE_URL}pokemon/${name}`);\r\n\r\n      if(response.ok) {\r\n        const pokemonRaw = await response.json();\r\n        pokemon = mapRawPokemon(pokemonRaw);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(\"Failed in fetch\");\r\n    } finally {\r\n      return pokemon;\r\n    }\r\n  }\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport Pokedex from './Components/Pokedex/Pokedex';\r\nimport Party from './Components/Party/Party';\r\nimport Search from './Components/Search/Search';\r\nimport Card from './Components/Card/Card';\r\nimport Pagination from './Components/Pagination/Pagination';\r\nimport { pokemonServices } from \"./Services/Pokemon.services\";\r\n\r\nfunction App() {\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [party, setParty] = useState([]);\r\n  const [searchedPokemon, setSearchedPokemon] = useState(undefined);\r\n  const [offset, setOffset] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchPokemons = async () => {\r\n      const response = await pokemonServices.getAllPokemon( offset );\r\n      setPokemons(response);\r\n    };\r\n\r\n    fetchPokemons();\r\n  }, [offset]);\r\n\r\n  const onAddToPartyHandler = (id) => {\r\n    const pokemon = id ? pokemons.find(poke => { return poke.id === id }) : searchedPokemon;\r\n\r\n    if(pokemon && party.length < 6) {\r\n      const newParty = [...party, {...pokemon, partyId: `${pokemon.id}_${new Date().getTime() / 100}`}];\r\n      setParty(newParty);\r\n    }\r\n  }\r\n\r\n  const onDeleteInPartyHandler = (partyId) => {\r\n    const newParty = party.filter(poke => { return poke.partyId !== partyId });\r\n    setParty(newParty);\r\n  }\r\n\r\n  const onSearchHandler = async (name) => {\r\n    const pokemon = await pokemonServices.getPokemon(name);\r\n    setSearchedPokemon(pokemon);\r\n  }\r\n\r\n  const onPaginationHandler = async ( action ) => {\r\n    let newOffset = offset;\r\n    // validamos que el botón de 'previus' no haga nada\r\n    // cuando el offset sea igual a 0 (porque se estarán mostrando los primeros pokemones)\r\n    if ( action === 'previus' && newOffset === 0 ) {\r\n      return;\r\n    } \r\n    // validamos que el botón de 'next' no haga nada cuando el \r\n    // offset sea 1110 (porque se estarán mostrando los útlimos\r\n    // pokemones ya que son 1118 pokemones en la pokeApi)\r\n    else if ( action === 'next' && newOffset === 1110 ) {\r\n      return;\r\n    } else {\r\n      switch ( action ) {\r\n        case 'previus':\r\n          newOffset -= 10;\r\n          setOffset( newOffset );\r\n          break;\r\n        case 'next':\r\n          newOffset += 10;\r\n          setOffset( newOffset );\r\n          break; \r\n        default: \r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main className=\"p-8 flex flex-col justify-center items-center gap-8\">\r\n      <Party party={party} onDeleteInParty={onDeleteInPartyHandler}/>\r\n\r\n      <Search onSearch={onSearchHandler} />\r\n      { searchedPokemon && \r\n        <Card\r\n          onAdd={()=> { onAddToPartyHandler() }}\r\n          id={searchedPokemon.id}\r\n          thumbnail= {searchedPokemon.thumbnail}\r\n          abilities={searchedPokemon.abilities}\r\n          types={searchedPokemon.types}\r\n          name={searchedPokemon.name}/> }\r\n\r\n      <Pokedex pokemons={pokemons} onAddToParty={ (id) => { onAddToPartyHandler(id) } } />\r\n      \r\n      <Pagination onPagination={ ( action ) => { onPaginationHandler( action ) } }/>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}